/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.StatePHDEnterprise;
import Business.Inventory.InventoryItem;
import Business.Network.Network;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientBillWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinay Limbare
 */
public class UseVaccineJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UseVaccineJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Enterprise enterprise;
    Ecosystem system;

    public UseVaccineJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Ecosystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.system = system;
        populateNameCombo();
        populateTable();
    }

    public void populateNameCombo() {
        patientNameJComboBox.removeAllItems();
        HospitalEnterprise he = (HospitalEnterprise) enterprise;
        for (Patient patient : he.getPatientDirectory().getPatientList()) {
            patientNameJComboBox.addItem(patient);
        }
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) vaccineJTable.getModel();
        model.setRowCount(0);
        HospitalEnterprise ent = (HospitalEnterprise) enterprise;
        for (InventoryItem inventoryItem : ent.getInventoryDirectory().getInventoryList()) {
            Object[] row = new Object[4];
            row[0] = inventoryItem;
            row[1] = inventoryItem.getQuantity();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vaccineJTable = new javax.swing.JTable();
        consumeJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        patientNameJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        namejTextField = new javax.swing.JTextField();
        agejTextField = new javax.swing.JTextField();
        insurancejTextField = new javax.swing.JTextField();
        backJButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Use Vaccine");

        vaccineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(vaccineJTable);

        consumeJButton.setText("Consume Vaccine");
        consumeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consumeJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Patient Name");

        patientNameJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNameJComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Patient Details");

        jLabel4.setText("Name");

        jLabel5.setText("Age");

        jLabel6.setText("Insurance Type");

        namejTextField.setEditable(false);
        namejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namejTextFieldActionPerformed(evt);
            }
        });

        agejTextField.setEditable(false);

        insurancejTextField.setEditable(false);
        insurancejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insurancejTextFieldActionPerformed(evt);
            }
        });

        backJButton1.setText("<< Back");
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(consumeJButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(patientNameJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addComponent(jLabel4))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(66, 66, 66)
                                                .addComponent(jLabel5))
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(namejTextField)
                                            .addComponent(agejTextField)
                                            .addComponent(insurancejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(174, 174, 174)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(49, 165, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(backJButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(patientNameJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(namejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(agejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(insurancejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)))))
                .addGap(30, 30, 30)
                .addComponent(consumeJButton)
                .addContainerGap(127, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void namejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namejTextFieldActionPerformed

    private void insurancejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insurancejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insurancejTextFieldActionPerformed

    private void patientNameJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNameJComboBoxActionPerformed
        // TODO add your handling code here:
        Patient patient = (Patient) patientNameJComboBox.getSelectedItem();
        namejTextField.setText(patient.getPatientName());
        agejTextField.setText(String.valueOf(patient.getAge()));
        insurancejTextField.setText(patient.getInsuranceStatus());
    }//GEN-LAST:event_patientNameJComboBoxActionPerformed

    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed

    private void consumeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consumeJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row !!!");
            return;
        }

        Patient patient = (Patient) patientNameJComboBox.getSelectedItem();

        InventoryItem item = (InventoryItem) vaccineJTable.getValueAt(selectedRow, 0);
        HospitalEnterprise ent = (HospitalEnterprise) enterprise;
        for (InventoryItem inventoryItem : ent.getInventoryDirectory().getInventoryList()) {
            if (inventoryItem == item) {
                if (inventoryItem.getQuantity() > 0) {
                    inventoryItem.setQuantity(inventoryItem.getQuantity() - 1);
                }
                else{
                    JOptionPane.showMessageDialog(null, "No enough quantity for this vaccine!!!");
                    return;
                }
            }
        }

        PatientBillWorkRequest patientBillWorkRequest = new PatientBillWorkRequest();
        patientBillWorkRequest.setVaccine(item.getVaccine());
        patientBillWorkRequest.setQuantity(1);
        patientBillWorkRequest.setInsurance(patient.getInsuranceStatus());
        patientBillWorkRequest.setPatient(patient);
        patientBillWorkRequest.setSender(account);
        patientBillWorkRequest.setStatus("Consumed");
        if (patientBillWorkRequest.getInsurance().equals("Not Insured")) {
            patientBillWorkRequest.setBillPrice(patientBillWorkRequest.getVaccine().getVaccinePrice());
        }
        if (patientBillWorkRequest.getInsurance().equals("Partially Insured")) {
            patientBillWorkRequest.setBillPrice((float) (patientBillWorkRequest.getVaccine().getVaccinePrice() * 0.6));
        }
        if (patientBillWorkRequest.getInsurance().equals("Insured")) {
            patientBillWorkRequest.setBillPrice(0);
            patientBillWorkRequest.setPaymentStatus("Paid by Insurance");
        }

        enterprise.getWorkQueue().getWorkRequestList().add(patientBillWorkRequest);

        Enterprise e1 = null;
        Network n = null;
        for (Network network : system.getNetworkDirectory().getNetworkList()) {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (e == enterprise) {
                    n = network;
                    break;
                }
            }
        }
        for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof StatePHDEnterprise) {
                e1 = e;
            }
        }

        if (patientBillWorkRequest.getInsurance().equalsIgnoreCase("Insured")) {
            JOptionPane.showMessageDialog(null, "Patient is Insured. Bill is not sent to PHD");
        } else {
            e1.getWorkQueue().getWorkRequestList().add(patientBillWorkRequest);
        }

        JOptionPane.showMessageDialog(null, "Consumed");
        populateTable();
    }//GEN-LAST:event_consumeJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField agejTextField;
    private javax.swing.JButton backJButton1;
    private javax.swing.JButton consumeJButton;
    private javax.swing.JTextField insurancejTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField namejTextField;
    private javax.swing.JComboBox patientNameJComboBox;
    private javax.swing.JTable vaccineJTable;
    // End of variables declaration//GEN-END:variables
}
