/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.NationalDistributor;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ManufacturerEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinanceWorkRequest;
import Business.WorkQueue.InvoiceWorkRequest;
import Business.WorkQueue.ManufacturerWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinay Limbare
 */
public class ManageNDFinanceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageNDFinanceJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Ecosystem system;
    boolean finalflag;

    public ManageNDFinanceJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, Ecosystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.system = system;

        populateTable();
        populateBillTable();

    }

    public void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) financeJTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest workRequest : system.getNationalDistributorEnterprise().getWorkQueue().getWorkRequestList()) {
            if (workRequest instanceof FinanceWorkRequest) {
                FinanceWorkRequest fwr = (FinanceWorkRequest) workRequest;
                Object[] row = new Object[5];
                row[0] = fwr.getOrderId();
                row[1] = fwr.getTotalPrice();
                row[2] = fwr.getSender();
                row[3] = fwr;
                row[4] = fwr.getPaymentStatus();
                dtm.addRow(row);
            }
        }

    }

    public void populateBillTable() {

        DefaultTableModel dtm = (DefaultTableModel) billJTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest workRequest : system.getNationalDistributorEnterprise().getWorkQueue().getWorkRequestList()) {
            if (workRequest instanceof InvoiceWorkRequest) {
                InvoiceWorkRequest fwr = (InvoiceWorkRequest) workRequest;
                Object[] row = new Object[5];
                row[0] = fwr.getOrderId();
                row[1] = workRequest.getSender();
                row[2] = fwr.getTotalPrice();
                row[3] = fwr;
                row[4] = fwr.getPaymentStatus();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        financeJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        payJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        billJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        financeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Total Price", "Sender", "Order Status", "Payment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(financeJTable);
        if (financeJTable.getColumnModel().getColumnCount() > 0) {
            financeJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("National Distributor Finance");

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        payJButton.setText("Pay Bill");
        payJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payJButtonActionPerformed(evt);
            }
        });

        billJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Requester Name", "Total", "Order Status", "Payment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(billJTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Bills from Manufacturer");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Bills Generated for Providers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(486, 486, 486)
                        .addComponent(payJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(backButton)
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(payJButton)
                .addGap(72, 72, 72)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void payJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = financeJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a order to Pay");
            return;
        }
        if(financeJTable.getValueAt(selectedRow, 3).equals("Paid")){
            JOptionPane.showMessageDialog(null, "Already Paid for this");
            return;
        }
        FinanceWorkRequest request = (FinanceWorkRequest) financeJTable.getValueAt(selectedRow, 3);
        request.setPaymentStatus("Paid");
        UserAccount senderUa = request.getSender();
        JOptionPane.showMessageDialog(null, senderUa.getUsername());

        Network net = null;
        Enterprise ent = null;
        for (Network network : system.getNetworkDirectory().getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof ManufacturerEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                            if (ua.getUsername().equals(senderUa.getUsername())) {
                                net = network;
                                ent = enterprise;
                            }
                        }
                    }
                }
            }
        }

        for (WorkRequest request1 : ent.getWorkQueue().getWorkRequestList()) {
            ManufacturerWorkRequest req = (ManufacturerWorkRequest) request1;
            if (req.getOrderId() == request.getOrderId()) {
                req.setPaymentStatus("Paid ya");
            }
        }


        for (WorkRequest wrk : senderUa.getWorkQueue().getWorkRequestList()) {
            if (wrk instanceof FinanceWorkRequest) {
                FinanceWorkRequest fwrq = (FinanceWorkRequest) wrk;
                if (fwrq.getOrderId() == request.getOrderId()) {
                    fwrq.setStatus("Paid");
                    fwrq.setPaymentStatus("Paid by ND");
                }
            }
        }
        populateTable();
    }//GEN-LAST:event_payJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTable billJTable;
    private javax.swing.JTable financeJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton payJButton;
    // End of variables declaration//GEN-END:variables
}
