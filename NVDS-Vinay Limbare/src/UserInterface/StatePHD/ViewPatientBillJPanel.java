/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.StatePHD;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientBillWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinay Limbare
 */
public class ViewPatientBillJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatientBillJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Ecosystem system;

    public ViewPatientBillJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, Ecosystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.system = system;
        populateTable();
    }

    private void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) patientBillJTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {

            if (request instanceof PatientBillWorkRequest) {
                PatientBillWorkRequest req = (PatientBillWorkRequest) request;
                Object[] row = new Object[7];
                row[0] = req;
                row[1] = req.getVaccine().getVaccineName();
                row[2] = req.getInsurance();
                row[3] = req.getSender();
                row[4] = req.getPatient().getPatientName();
                row[5] = req.getBillPrice();
                row[6] = req.getPaymentStatus();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientBillJTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        payJButton = new javax.swing.JButton();
        cdcPayJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("View Patient Bill");

        patientBillJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Vaccine Name", "Insurance Status", "Provider Name", "Patient Name", "Price", "Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patientBillJTable);

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        payJButton.setText("Pay for Patient");
        payJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payJButtonActionPerformed(evt);
            }
        });

        cdcPayJButton.setText("Ask CDC to pay");
        cdcPayJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdcPayJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(payJButton)
                        .addGap(243, 243, 243)
                        .addComponent(cdcPayJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(406, 406, 406)
                        .addComponent(jLabel1)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payJButton)
                    .addComponent(cdcPayJButton))
                .addContainerGap(106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void payJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = patientBillJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row !!!");
            return;
        }
        if (patientBillJTable.getValueAt(selectedRow, 0) != null) {
            JOptionPane.showMessageDialog(null, "Already processed!!");
            return;
        }
        PatientBillWorkRequest billWorkRequest = (PatientBillWorkRequest) patientBillJTable.getValueAt(selectedRow, 0);
        billWorkRequest.setPaymentStatus("Paid by PHD");
        JOptionPane.showMessageDialog(null, "Paid by PHD");
        populateTable();
    }//GEN-LAST:event_payJButtonActionPerformed

    private void cdcPayJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdcPayJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = patientBillJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row !!!");
            return;
        }

        PatientBillWorkRequest billWorkRequest = (PatientBillWorkRequest) patientBillJTable.getValueAt(selectedRow, 0);
        if (billWorkRequest.getPaymentStatus().equals("Paid by PHD")) {
            JOptionPane.showMessageDialog(null, "Already Paid!!!");
            return;
        }

        system.getWorkQueue().getWorkRequestList().add(billWorkRequest);
        billWorkRequest.setPaymentStatus("Forwarded to CDC");

        populateTable();
    }//GEN-LAST:event_cdcPayJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton cdcPayJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientBillJTable;
    private javax.swing.JButton payJButton;
    // End of variables declaration//GEN-END:variables
}
